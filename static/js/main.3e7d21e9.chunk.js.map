{"version":3,"sources":["common/constants.js","components/UI/error/error.js","serviceWorker.js","components/footer/footer.js","components/UI/spinner/spinner.js","components/header/header.js","components/addmore/addmore.js","common/service.js","components/home/homecontroller.js","components/home/homeview.js","components/app/app.js","index.js","components/errorboundary/errorboundary.js","config.js"],"names":["__webpack_require__","d","__webpack_exports__","PRECISION","DELAY","CURRENCY_INFO","name","description","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Error","_ref","_ref$error","error","a","createElement","aria-label","className","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","Footer","react_default","alt","src","Spinner","spin","index_es","icon","faSpinner","size","errorboundary","area-label","Header","props","amountRef","useRef","timerId","baseCurrencyDescription","baseCurrency","onChange","clearTimeout","setTimeout","updateConversionAmount","current","value","ref","placeholder","type","AddMore","React","forwardRef","addMoreButton","onClick","setIsAddMore","enterInput","Fragment","pendingCurrencies","map","currency","key","addCurrencyCode","isAddMore","url","exchangerate","getData","fetchJSON","method","_callee","options","absoluteUrl","response","json","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","apiServer","fetch","sent","abrupt","Promise","resolve","t0","reject","stop","actions","ADD","REMOVE","baseCurrencyConversion","exchangeRate","euroRates","rates","newRates","eur","currencyCode","EUR","toFixed","Object","assign","unit","currencyReducer","action","selectedCurrencyList","concat","toConsumableArray","payload","HomeView","CurrencyDetail","lazy","e","bind","currencyInputRef","_useState","useState","_useState2","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setError","_useReducer","useReducer","_useReducer2","dispatch","_useState5","_useState6","conversionAmount","setConversionAmount","_useState7","_useState8","currencyCollection","setCurrencyCollection","_useState9","_useState10","useEffect","service","convertedBaseCurrency","currencyInfo","amount","trim","toUpperCase","validCurrency","find","removeCurrency","currencycode","filterCurrency","filter","reduce","pendingList","item","selectedItem","push","currencyList","useMemo","header_header","spinner_spinner","error_error","react","fallback","addmore_addmore","App","react_router_dom","react_router","path","component","Home","to","footer_footer","ReactDOM","render","app_app","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ErrorBoundary","hasError","info","this","setState","react__WEBPACK_IMPORTED_MODULE_5___default","components_UI_error_error__WEBPACK_IMPORTED_MODULE_6__","children","Component"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAO,IAAMF,EAAY,EACZC,EAAQ,IACRC,EAAiB,CACtB,CAACC,KAAM,MAAOC,YAAa,QAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,iBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,kBAC3B,CAACD,KAAM,MAAOC,YAAa,oBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,iBAC3B,CAACD,KAAM,MAAOC,YAAa,eAC3B,CAACD,KAAM,MAAOC,YAAa,mBAC3B,CAACD,KAAM,MAAOC,YAAa,mBAC3B,CAACD,KAAM,MAAOC,YAAa,aAC3B,CAACD,KAAM,MAAOC,YAAa,iBAC3B,CAACD,KAAM,MAAOC,YAAa,kBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,qBAC3B,CAACD,KAAM,MAAOC,YAAa,kBAC3B,CAACD,KAAM,MAAOC,YAAa,mBAC3B,CAACD,KAAM,MAAOC,YAAa,yBAC3B,CAACD,KAAM,MAAOC,YAAa,oBAC3B,CAACD,KAAM,MAAOC,YAAa,qBAC3B,CAACD,KAAM,MAAOC,YAAa,kBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,oBAC3B,CAACD,KAAM,MAAOC,YAAa,gBAC3B,CAACD,KAAM,MAAOC,YAAa,qBAC3B,CAACD,KAAM,MAAOC,YAAa,sBAC3B,CAACD,KAAM,MAAOC,YAAa,mBAC3B,CAACD,KAAM,MAAOC,YAAa,oBAC3B,CAACD,KAAM,MAAOC,YAAa,aAC3B,CAACD,KAAM,MAAOC,YAAa,wDCnCnC,IAAAC,EAAAR,EAAA,GAAAS,EAAAT,EAAAU,EAAAF,GAAAR,EAAA,IAaeW,IAVD,SAAAC,GAAgB,IAAAC,EAAAD,EAAdE,aAAc,IAAAD,EAAR,GAAQA,EAC1B,OACIJ,EAAAM,EAAAC,cAAA,OAAKC,aAAW,gBAAgBC,UAAU,iBAA1C,IAA4DJ,EAA5D,+RCOFK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAA7B,GACLyB,QAAQzB,MAAM,4CAA6CA,wBCpFlD8B,SAVA,WACXL,QAAQC,IAAI,mBAEZ,OACIK,EAAA9B,EAAAC,cAAA,UAAQE,UAAU,oBACd2B,EAAA9B,EAAAC,cAAA,OAAK8B,IAAI,cAAc5B,UAAU,aAAa6B,IAAI,2BAClDF,EAAA9B,EAAAC,cAAA,aAJQ,+ECcLgC,SAZC,WACd,IAAMC,EAAOJ,EAAA9B,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMC,IAAYC,KAAK,KAAKJ,MAAI,IAE9D,OADAV,QAAQC,IAAI,qBAEVK,EAAA9B,EAAAC,cAACsC,EAAA,EAAD,KACET,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,oBACX2B,EAAA9B,EAAAC,cAAA,OAAKuC,aAAW,eAAerC,UAAU,WAAzC,IAAqD+B,EAArD,wBCqBKO,SA3BA,SAACC,GACZlB,QAAQC,IAAI,oBACZ,IAAMkB,EAAYC,mBACdC,EAAU,EAMd,OACIf,EAAA9B,EAAAC,cAACsC,EAAA,EAAD,KACIT,EAAA9B,EAAAC,cAAA,cACI6B,EAAA9B,EAAAC,cAAA,eAAQW,IAAOkC,wBAAf,KACAhB,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,gBACX2B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBAAkBS,IAAOmC,cACxCjB,EAAA9B,EAAAC,cAAA,SAAO+C,SAAU,kBAV7BC,aAAaJ,QACbA,EAAUK,WAAW,kBAAMR,EAAMS,uBAAuBR,EAAUS,QAAQC,QAAQhE,OASrBiE,IAAKX,EAAWzC,aAAW,wBAAwBqD,YAAY,iBAAiBC,KAAK,SAASrD,UAAU,iCCC9JsD,eAlBCC,IAAMC,WAAW,SAACjB,EAAOY,GACrC,IAAMM,EAAgB9B,EAAA9B,EAAAC,cAAA,UAAQE,UAAU,yBAAyB0D,QAAS,kBAAMnB,EAAMoB,cAAa,KAA7E,2BAChBC,EAAajC,EAAA9B,EAAAC,cAAA6B,EAAA9B,EAAAgE,SAAA,KAAElC,EAAA9B,EAAAC,cAAA,UAAQE,UAAU,iBAAiBD,aAAW,uBAAuBoD,IAAKA,GAC1FZ,EAAMuB,kBAAkBC,IAAI,SAACC,GAAD,OAAarC,EAAA9B,EAAAC,cAAA,UAAQmE,IAAKD,EAAUd,MAAOc,GAAWA,MAEvFrC,EAAA9B,EAAAC,cAAA,UAAQE,UAAU,wBAAwB0D,QAASnB,EAAM2B,iBAAzD,WAGA,OADA7C,QAAQC,IAAI,uBACLK,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,oBAAf,IAAoCuC,EAAM4B,UAAaV,EAAiBG,EAAxE,yCCXEQ,EAAM,CACfC,aAAc,WAGLC,EAAU,SAACF,GAIpB,kDAAOG,CAAUH,EAHD,CACZI,OAAQ,oDAKhB,SAAAC,EAAyBL,GAAzB,IAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAC,EAAAnF,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA8BV,EAA9BI,EAAAO,OAAA,QAAAC,IAAAR,EAAA,GAAAA,EAAA,GAAsC,GAC5BH,EAAclE,IAAO8E,UAAYnB,EAD3Cc,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgCI,MAAMb,EAAaD,GAHnD,cAGcE,EAHdM,EAAAO,KAAAP,EAAAE,KAAA,EAI2BR,EAASC,OAJpC,cAIcA,EAJdK,EAAAO,KAKQpE,QAAQC,IAAI,sBAAuB8C,GAL3Cc,EAAAQ,OAAA,SAMeC,QAAQC,QAAQf,IAN/B,eAAAK,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAQQ7D,QAAQC,IAAI,iBAAZ4D,EAAAW,IARRX,EAAAQ,OAAA,SASeC,QAAQG,OAARZ,EAAAW,KATf,yBAAAX,EAAAa,SAAAtB,EAAA,yCCTO,IAAMuB,EAAU,CACnBC,IAAK,MACLC,OAAQ,UAWZ,IAAMC,EAAyB,SAACC,GAC5B,IAAIC,EAAYD,EAAaE,MACzBC,EAAW,GACTC,EAAM,EAAIH,EAAU5F,IAAOmC,cAEjC,IAAK,IAAI6D,KADTF,EAAW,CAAEG,IAAOF,EAAIG,QAAQ1H,IAAU,IACjBoH,EACrBE,EAASE,IAAiBJ,EAAUI,GAAgBD,GAAKG,QAAQ1H,IAAU,GAG/E,OAD0BE,IAAc4E,IAAI,SAAAC,GAAQ,OAAI4C,OAAOC,OAAO,GAAI7C,EAAU,CAAE8C,KAAMP,EAASvC,EAAS5E,WAI3G,SAAS2H,EAAgB5F,EAAO6F,GACnC,OAAQA,EAAO3D,MACX,KAAK2C,EAAQC,IACT,MAAO,CAACgB,qBAAoB,GAAAC,OAAAN,OAAAO,EAAA,EAAAP,CAAMzF,EAAM8F,sBAAZ,CAAkCD,EAAOI,WACzE,KAAKpB,EAAQE,OACT,MAAO,CAACe,qBAAsBD,EAAOI,SACzC,QACI,OAAOjG,aCwDJkG,EAlFE,SAAC9E,GAChB,IAAM+E,EAAiB/D,IAAMgE,KAAK,kBAAMzI,EAAA0I,EAAA,GAAA3G,KAAA/B,EAAA2I,KAAA,YAClCC,EAAmBjF,mBAFCkF,EAGQC,oBAAS,GAHjBC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GAGnBI,EAHmBF,EAAA,GAGRG,EAHQH,EAAA,GAAAI,EAIAL,mBAAS,IAJTM,EAAAtB,OAAAkB,EAAA,EAAAlB,CAAAqB,EAAA,GAInBrI,EAJmBsI,EAAA,GAIZC,EAJYD,EAAA,GAAAE,EAOAC,qBAAWtB,EAFhB,CAACE,qBAAqB,KALjBqB,EAAA1B,OAAAkB,EAAA,EAAAlB,CAAAwB,EAAA,GAOnBjH,EAPmBmH,EAAA,GAOZC,EAPYD,EAAA,GAAAE,EAQsBZ,mBAAS,IAR/Ba,EAAA7B,OAAAkB,EAAA,EAAAlB,CAAA4B,EAAA,GAQnBE,EARmBD,EAAA,GAQDE,EARCF,EAAA,GAAAG,EAS0BhB,mBAAS,IATnCiB,EAAAjC,OAAAkB,EAAA,EAAAlB,CAAAgC,EAAA,GASnBE,EATmBD,EAAA,GASCE,EATDF,EAAA,GAAAG,EAUQpB,oBAAS,GAVjBqB,EAAArC,OAAAkB,EAAA,EAAAlB,CAAAoC,EAAA,GAUnB7E,EAVmB8E,EAAA,GAURtF,EAVQsF,EAAA,GAY1BC,oBAAU,WACRlB,GAAa,GDdNmB,EAAgBA,EAAY9E,cAAcxD,KAAM,SAAA+D,GACnD,IAAMwE,EAAwBjD,EAAuBvB,GACrD,OAAOe,QAAQC,QAAQwD,KACvB3H,MAAM,SAAA7B,GACN,OAAO+F,QAAQG,OAAOlG,KCYzBiB,KAAK,SAAAwI,GACJN,EAAsBM,GACtBrB,GAAa,KACZvG,MAAM,SAAA7B,GACPuI,EAAS,yCACTH,GAAa,MAEd,IACHkB,oBAAU,WACLtJ,EAAMyF,OAAS,GAChBtC,WAAW,WACToF,EAAS,KACR,MAEJ,CAACvI,IACJ,IAAMoD,EAAyB,SAACsG,GAC3BA,EAAS,EACVX,EAAoBW,GAEpBnB,EAAS,oCAGPjE,EAAkB,WACtB,IAAMuC,EAAeiB,EAAiBzE,QAAQC,MAAMqG,OAAOC,cAC3D,GAAG/C,EAAapB,OAAS,EAAG,CAC1B,IAAMoE,EAAgBX,EAAmBY,KAAK,SAAA1F,GAAQ,OAAIA,EAAS5E,OAASqH,IAC5E9C,GAAa,GACb4E,EAAS,CAAClF,KAAM2C,EAAQC,IAAKmB,QAASqC,MAGpCE,EAAiB,SAACC,GACtB,IAAMC,EAAiB1I,EAAM8F,qBAAqB6C,OAAO,SAAA9F,GAAQ,OAAIA,EAAS5E,OAASwK,IACvFrB,EAAS,CAAClF,KAAM2C,EAAQE,OAAQkB,QAASyC,KAGrC/F,EAAoBgF,EAAmBiB,OAAO,SAACC,EAAaC,GAGhE,OAF4B9I,EAAM8F,qBAAqByC,KAAK,SAAAQ,GAAY,OAAIA,EAAa9K,OAAS6K,EAAK7K,QAC/E4K,EAAYG,KAAKF,EAAK7K,MACvC4K,GACN,IAEGI,EAAejJ,EAAM8F,qBAAuB9F,EAAM8F,qBAAqBlD,IAAI,SAAAC,GAAQ,OAAIrC,EAAA9B,EAAAC,cAACwH,EAAD,CAAgBrD,IAAKD,EAAS5E,KAAMsJ,iBAAkBA,EAAkB1E,SAAUA,EAAU2F,eAAgBA,MAAqC,KAE9O,OACEhI,EAAA9B,EAAAC,cAACsC,EAAA,EAAD,KACGiI,kBAAQ,kBAAM1I,EAAA9B,EAAAC,cAACwK,EAAD,CAAQ5B,iBAAkBA,EAAkB1F,uBAAwBA,KAAmC,CAAC0F,IACvH/G,EAAA9B,EAAAC,cAAA,YACCiI,EAAYpG,EAAA9B,EAAAC,cAACyK,EAAD,MAAc,KAC1B3K,EAAMyF,OAAS,EAAI1D,EAAA9B,EAAAC,cAAC0K,EAAA,EAAD,CAAO5K,MAAOA,IAAkB,KACpD+B,EAAA9B,EAAAC,cAAC2K,EAAA,SAAD,CAAUC,SAAU/I,EAAA9B,EAAAC,cAAA,0BAClB6B,EAAA9B,EAAAC,cAAA,OAAKC,aAAW,qBAAqBC,UAAU,qBAC5CoK,EACAC,kBAAQ,kBACL1I,EAAA9B,EAAAC,cAAC6K,EAAD,CAASxH,IAAKuE,EAAkB5D,kBAAmBA,EAAmBK,UAAWA,EAAWR,aAAcA,EAAcO,gBAAiBA,KAE3I,CAACC,SCzDEyG,SAbH,WACR,OACIjJ,EAAA9B,EAAAC,cAACsC,EAAA,EAAD,KACIT,EAAA9B,EAAAC,cAAC+K,EAAA,EAAD,KACIlJ,EAAA9B,EAAAC,cAACgL,EAAA,EAAD,KACInJ,EAAA9B,EAAAC,cAACgL,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWC,IAC3BtJ,EAAA9B,EAAAC,cAACgL,EAAA,EAAD,CAAUI,GAAG,OAEhBb,kBAAQ,kBAAM1I,EAAA9B,EAAAC,cAACqL,EAAD,OAAmB,QCZlDC,IAASC,OAAO1J,EAAA9B,EAAAC,cAACwL,EAAD,MAAaC,SAASC,eAAe,QTiB9C,SAAkB/K,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+K,IAAIC,UAAwBvL,OAAOC,SAASuL,MACpDC,SAAWzL,OAAOC,SAASwL,OAIvC,OAGFzL,OAAO0L,iBAAiB,OAAQ,WAC9B,IAAMrL,EAAK,GAAA0G,OAAMwE,UAAN,sBAEPzL,GAgEV,SAAiCO,EAAOC,GAEtC+E,MAAMhF,GACHK,KAAK,SAAA+D,GAEJ,IAAMkH,EAAclH,EAASmH,QAAQC,IAAI,gBAEnB,MAApBpH,EAASqH,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CxL,UAAUC,cAAcwL,MAAMtL,KAAK,SAAAC,GACjCA,EAAasL,aAAavL,KAAK,WAC7BV,OAAOC,SAASiM,aAKpB9L,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAgL,CAAwB9L,EAAOC,GAI/BC,UAAUC,cAAcwL,MAAMtL,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MS3C/BE,uGCJM4L,6MACFpL,MAAQ,CAAEqL,UAAU,EAAO5M,MAAO,qFAEhBA,EAAO6M,GAEvBpL,QAAQC,IAAI,iBAAkB1B,GAC9B8M,KAAKC,SAAS,CAAEH,UAAU,EAAM5M,MAAOA,qCAKvC,OAAI8M,KAAKvL,MAAMqL,SAEbI,EAAA/M,EAAAC,cAAC8M,EAAA/M,EAAMgE,SAAP,KACI+I,EAAA/M,EAAAC,cAAC+M,EAAA,EAAD,CAAOjN,MAJG,6BAQT8M,KAAKnK,MAAMuK,gBAlBIvJ,IAAMwJ,WAsBjBR,sCCzBFvN,EAAA,GACXuG,UAAW,kCACX3C,aAAc,MACdD,wBAAyB","file":"static/js/main.3e7d21e9.chunk.js","sourcesContent":["export const PRECISION = 4;\nexport const DELAY = 400;\nexport const CURRENCY_INFO =  [\n        {name: 'EUR', description: 'Euro' },\n        {name: 'JPY', description: 'Japanese yen' },\n        {name: 'BGN', description: 'Bulgarian lev' },\n        {name: 'CZK', description: 'Czech koruna' },\n        {name: 'DKK', description: 'Danish krone' },\n        {name: 'GBP', description: 'Pound sterling' },\n        {name: 'HUF', description: 'Hungarian forint' },\n        {name: 'PLN', description: 'Polish zloty' },\n        {name: 'RON', description: 'Romanian leu' },\n        {name: 'SEK', description: 'Swedish krona' },\n        {name: 'CHF', description: 'Swiss franc' },\n        {name: 'ISK', description: 'Icelandic krona' },\n        {name: 'NOK', description: 'Norwegian krone' },\n        {name: 'USD', description: 'US dollar' },\n        {name: 'HOK', description: 'Croatian kuna' },\n        {name: 'RUB', description: 'Russian rouble' },\n        {name: 'TRY', description: 'Turkish lira' },\n        {name: 'AUD', description: 'Australian dollar' },\n        {name: 'BRL', description: 'Brazilian real' },\n        {name: 'CAD', description: 'Canadian dollar' },\n        {name: 'CNY', description: 'Chinese yuan renminbi' },\n        {name: 'HKD', description: 'Hong Kong dollar' },\n        {name: 'IDR', description: 'Indonesian rupiah' },\n        {name: 'ILS', description: 'Israeli shekel' },\n        {name: 'INR', description: 'Indian rupee' },\n        {name: 'KRW', description: 'South Korean won' },\n        {name: 'MXN', description: 'Mexican peso' },\n        {name: 'MYR', description: 'Malaysian ringgit' },\n        {name: 'NZD', description: 'New Zealand dollar' },\n        {name: 'PHP', description: 'Philippine peso' },\n        {name: 'SGD', description: 'Singapore dollar' },\n        {name: 'THB', description: 'Thai baht' },\n        {name: 'ZAR', description: 'South African rand' }\n    ];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './error.css';\nconst Error = ({error=''}) => {\n    return (\n        <div aria-label=\"error message\" className=\"error-message\"> {error} </div>\n    );\n};\n\nError.propTypes = {\n    error: PropTypes.string\n};\n\nexport default Error;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './footer.css';\nconst Footer = () => {\n    console.log('render footer..');\n    const footerText = `© 2019 Anatta Inc. All rights reserved.`;\n    return (\n        <footer className=\"footer-container\">\n            <img alt=\"Anatta logo\" className=\"footerLogo\" src='/images/icon-72x72.png'></img>\n            <label>{footerText}</label>\n        </footer>\n    );\n};\nexport default Footer;","import React from 'react';\nimport ErrorBoundary from 'components/errorboundary/errorboundary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport './spinner.css';\nconst Spinner = () => {\n  const spin = <FontAwesomeIcon icon={faSpinner } size=\"6x\" spin></FontAwesomeIcon>;\n  console.log('render spinner...');\n  return (\n    <ErrorBoundary>\n      <div className=\"spiner-container\">\n          <div area-label=\"loading data\" className=\"spinner\"> {spin} </div>\n      </div>\n      \n    </ErrorBoundary>\n  );\n};\nexport default Spinner;","import config from 'src/config';\nimport {DELAY} from 'common/constants';\nimport React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorBoundary from 'components/errorboundary/errorboundary';\nimport './header.css';\nconst Header = (props) => {\n    console.log('render header...');\n    const amountRef = useRef();\n    let timerId = 0;\n    const onCurrencyAmountChange = () => {\n        clearTimeout(timerId);\n        timerId = setTimeout(() => props.updateConversionAmount(amountRef.current.value), DELAY);\n    }\n    \n    return (\n        <ErrorBoundary>\n            <header>\n                <div > {config.baseCurrencyDescription} </div>\n                <div className=\"header-title\">\n                    <div className=\"currency-title\">{config.baseCurrency}</div>\n                    <input onChange={() => onCurrencyAmountChange()} ref={amountRef} aria-label=\"Enter currency number\" placeholder=\"Enter amount..\" type=\"number\" className=\"currency-amount\"></input>\n                </div>\n            </header>\n        </ErrorBoundary>\n    );\n};\n\nHeader.propTypes = {\n    conversionAmount: PropTypes.string,\n    updateConversionAmount: PropTypes.func\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './addmore.css';\nimport 'common/helper.css';\nconst AddMore = React.forwardRef((props, ref) => {\n    const addMoreButton = <button className=\"action-btn addmore-btn\" onClick={() => props.setIsAddMore(false)}>(+) Add More Currencies</button>;\n    const enterInput = <><select className=\"currency-input\" aria-label=\"select currency code\" ref={ref}>\n        {props.pendingCurrencies.map((currency)=> <option key={currency} value={currency}>{currency}</option>)}\n    </select>\n    <button className=\"action-btn submit-btn\" onClick={props.addCurrencyCode}>Submit</button></>;\n    \n    console.log('render AddMore ....');\n    return <div className=\"addMoreContainer\"> {props.isAddMore ?  addMoreButton :  enterInput} </div> ;\n});\nAddMore.propTypes = {\n    isAddMore: PropTypes.bool,\n    pendingCurrencies: PropTypes.array,\n    addCurrencyCode: PropTypes.func,\n    setIsAddMore: PropTypes.func\n};\n\n\nexport default AddMore;\n","import config from 'src/config';\nexport const url = {\n    exchangerate: '/latest'\n}\n\nexport const getData = (url) => {\n    const options = {\n        method: 'GET'\n    }\n    return fetchJSON(url, options);\n}\n\nasync function fetchJSON(url, options={}) {\n    const absoluteUrl = config.apiServer + url;\n    try{\n        const response =  await fetch(absoluteUrl, options);\n        const json = await response.json();\n        console.log('Request succeeded: ', url);\n        return Promise.resolve(json);\n    } catch(error){\n        console.log('Request failed', error);\n        return Promise.reject(error);\n    }\n}\n","import * as service from 'common/service';\nimport config from 'src/config';\nimport { PRECISION, CURRENCY_INFO } from 'common/constants';\nexport const actions = {\n    ADD: \"ADD\",\n    REMOVE: \"REMOVE\"\n}\nexport function getCurrencyExchangeInfo() {\n    return service.getData(service.url.exchangerate).then((response => {\n        const convertedBaseCurrency = baseCurrencyConversion(response); // EUR to  USD\n        return Promise.resolve(convertedBaseCurrency);\n    })).catch(error => {\n        return Promise.reject(error);\n    });\n}\n\nconst baseCurrencyConversion = (exchangeRate) => {\n    let euroRates = exchangeRate.rates;\n    let newRates = {};\n    const eur = 1 / euroRates[config.baseCurrency];\n    newRates = { \"EUR\": eur.toFixed(PRECISION+1) };\n    for (let currencyCode in euroRates) {\n        newRates[currencyCode] = (euroRates[currencyCode] * eur).toFixed(PRECISION+1);\n    }\n    const formattedNewRates = CURRENCY_INFO.map(currency => Object.assign({}, currency, { unit: newRates[currency.name] }));\n    return formattedNewRates;\n}\n\nexport function currencyReducer(state, action) {\n    switch (action.type) {\n        case actions.ADD:\n            return {selectedCurrencyList: [...state.selectedCurrencyList, action.payload]};\n        case actions.REMOVE:\n            return {selectedCurrencyList: action.payload};\n        default:\n            return state;\n    }\n}\n","import React, { Suspense, useState, useEffect, useRef, useReducer, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from 'components/UI/spinner/spinner';\nimport Header from 'components/header/header';\nimport Error from 'components/UI/error/error';\nimport ErrorBoundary from 'components/errorboundary/errorboundary';\nimport AddMore from 'components/addmore/addmore';\nimport { getCurrencyExchangeInfo, currencyReducer, actions} from './homecontroller';\nimport './home.css';\nconst HomeView = (props) => {\n  const CurrencyDetail = React.lazy(() => import('components/currencydetail/currencydetailview'));\n  const currencyInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const initialState = {selectedCurrencyList:[]};\n\n  const [state, dispatch] = useReducer(currencyReducer, initialState);\n  const [conversionAmount, setConversionAmount] = useState(10);\n  const [currencyCollection, setCurrencyCollection] = useState([]);\n  const [isAddMore, setIsAddMore] = useState(true);\n  \n  useEffect(() => {\n    setIsLoading(true);\n    getCurrencyExchangeInfo()\n    .then(currencyInfo => {\n      setCurrencyCollection(currencyInfo);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(\"Server is down. Try after some time..\");\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if(error.length > 0) {\n      setTimeout(()=> {\n        setError('');\n      }, 3000);\n    }\n  }, [error])\n  const updateConversionAmount = (amount) => {\n    if(amount > 0) {\n      setConversionAmount(amount);\n    } else {\n      setError(\"Enter correct conversion amount\");\n    }\n  };\n  const addCurrencyCode = () => {\n    const currencyCode = currencyInputRef.current.value.trim().toUpperCase();\n    if(currencyCode.length > 2) {\n      const validCurrency = currencyCollection.find(currency => currency.name === currencyCode);\n      setIsAddMore(true);\n      dispatch({type: actions.ADD, payload: validCurrency});\n    }\n  }\n  const removeCurrency = (currencycode) => {\n    const filterCurrency = state.selectedCurrencyList.filter(currency => currency.name !== currencycode);\n    dispatch({type: actions.REMOVE, payload: filterCurrency})\n  };\n  \n  const pendingCurrencies = currencyCollection.reduce((pendingList, item ) => { \n    const isCurrencyAvailable = state.selectedCurrencyList.find(selectedItem => selectedItem.name === item.name);\n    !isCurrencyAvailable && pendingList.push(item.name);\n    return pendingList;\n  }, []);\n  \n  const currencyList = state.selectedCurrencyList ? state.selectedCurrencyList.map(currency => <CurrencyDetail key={currency.name} conversionAmount={conversionAmount} currency={currency} removeCurrency={removeCurrency}></CurrencyDetail>) : null;\n  \n  return (\n    <ErrorBoundary>\n      {useMemo(() => <Header conversionAmount={conversionAmount} updateConversionAmount={updateConversionAmount}></Header>, [conversionAmount])}\n      <main>\n      {isLoading ? <Spinner /> : null}\n      {error.length > 0 ? <Error error={error}></Error> : null}\n      <Suspense fallback={<div>Loading...</div>}>\n        <div aria-label=\"currency container\" className=\"scrollableSection\"> \n          {currencyList}\n          {useMemo(()=> \n              <AddMore ref={currencyInputRef} pendingCurrencies={pendingCurrencies} isAddMore={isAddMore} setIsAddMore={setIsAddMore} addCurrencyCode={addCurrencyCode}></AddMore>\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          , [isAddMore])}\n        </div>\n      </Suspense>\n      </main>\n    </ErrorBoundary>\n  );\n\n}\nHomeView.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default HomeView;\n\n","import React, { useMemo } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Footer from 'components/footer/footer';\nimport Home from 'components/home/homeview';\n\nimport ErrorBoundary from 'components/errorboundary/errorboundary';\nimport './app.css';\nconst App = () => {\n    return (\n        <ErrorBoundary>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={Home} />\n                    <Redirect to=\"/\" />\n                </Switch>\n                {useMemo(() => <Footer></Footer>, [])}\n            </BrowserRouter>\n        </ErrorBoundary>\n    );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/app/app';\n\nReactDOM.render(<App></App>, document.getElementById('app'));\n\nserviceWorker.register();","\nimport React from 'react';\nimport Error from 'components/UI/error/error';\nclass ErrorBoundary extends React.Component {\n    state = { hasError: false, error: '' };\n  \n    componentDidCatch(error, info) {\n      // for logging \n      console.log('logging error:', error);\n      this.setState({ hasError: true, error: error });\n    }\n  \n    render() {\n      const message = \"Something went wrong...\";\n      if (this.state.hasError) {\n        return (\n        <React.Fragment>\n            <Error error={message}></Error>\n        </React.Fragment>);\n      }\n  \n      return this.props.children; \n    }\n  }\n\n  export default ErrorBoundary;","export default {\n    apiServer: \"https://api.exchangeratesapi.io\",\n    baseCurrency: \"USD\",\n    baseCurrencyDescription: \"United States Dollors\"\n}\n"],"sourceRoot":""}